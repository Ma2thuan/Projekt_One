@model Projekt_1.Model.passbook

@{
    ViewBag.Title = "Edit Passbook";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2 class="mb-4"></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Edit Passbook Details</h4>
        </div>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.SavingsBookID)

            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="user_id" class="form-label">
                        @Html.DisplayNameFor(model => model.user_id)
                    </label>
                    @Html.DropDownList("user_id", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.user_id, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label for="OpeningDate" class="form-label">
                        @Html.DisplayNameFor(model => model.OpeningDate)
                    </label>
                    @Html.EditorFor(model => model.OpeningDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OpeningDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="InitialDepositAmount" class="form-label">
                        @Html.DisplayNameFor(model => model.InitialDepositAmount)
                    </label>
                    @Html.EditorFor(model => model.InitialDepositAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InitialDepositAmount, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label for="DepositAmount" class="form-label">
                        @Html.DisplayNameFor(model => model.DepositAmount)
                    </label>
                    @Html.EditorFor(model => model.DepositAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DepositAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="InterestRate" class="form-label">
                        @Html.DisplayNameFor(model => model.InterestRate)
                    </label>
                    @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label for="SavingsType" class="form-label">
                        @Html.DisplayNameFor(model => model.SavingsType)
                    </label>
                    @Html.DropDownList("SavingsType", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SavingsType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <label for="IsClosed" class="form-label">
                        @Html.DisplayNameFor(model => model.IsClosed)
                    </label>
                    <div class="form-check">
                        @Html.EditorFor(model => model.IsClosed, new { htmlAttributes = new { @class = "form-check-input" } })
                        @Html.ValidationMessageFor(model => model.IsClosed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer d-flex justify-content-start gap-2">
            <button type="submit" class="btn btn-primary">Save</button>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
}
