@model Projekt_1.Model.passbook

@{
    ViewBag.Title = "Create Passbook";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2 class="mb-4">Create Passbook</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Passbook Details</h4>
        </div>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })

            <!-- Book ID -->
            <div class="form-group row">
                @Html.LabelFor(model => model.SavingsBookID, "Book ID", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.SavingsBookID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SavingsBookID, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- User Name -->
            <div class="form-group row">
                @Html.LabelFor(model => model.user_id, "User Name", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.DropDownList("user_id", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.user_id, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Opening Date -->
            <div class="form-group row">
                @Html.LabelFor(model => model.OpeningDate, "Open Date", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.OpeningDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OpeningDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Initial Deposit -->
            <div class="form-group row">
                @Html.LabelFor(model => model.InitialDepositAmount, "Initial Deposit", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.InitialDepositAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InitialDepositAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Lock Deposit -->
            <div class="form-group row">
                @Html.LabelFor(model => model.DepositAmount, "Lock Deposit", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.DepositAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DepositAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Interest Rate -->
            <div class="form-group row">
                @Html.LabelFor(model => model.InterestRate, "Interest Rate", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.InterestRate, new { htmlAttributes = new { @class = "form-control", id = "InterestRate" } })
                    @Html.ValidationMessageFor(model => model.InterestRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Savings Type -->
            <div class="form-group row">
                @Html.LabelFor(model => model.SavingsType, "Savings Type", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    @Html.DropDownList("SavingsType", null, new { @class = "form-control", id = "SavingsType" })
                    @Html.ValidationMessageFor(model => model.SavingsType, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- State -->
            <div class="form-group row">
                @Html.LabelFor(model => model.IsClosed, "State", new { @class = "col-sm-3 col-form-label" })
                <div class="col-sm-9">
                    <div class="form-check">
                        @Html.EditorFor(model => model.IsClosed, new { htmlAttributes = new { @class = "form-check-input" } })
                        @Html.ValidationMessageFor(model => model.IsClosed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer d-flex justify-content-start gap-2">
            <button type="submit" class="btn btn-success">Create</button>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
}

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#SavingsType').change(function () {
                var savingsTypeId = $(this).val();
                if (savingsTypeId) {
                    $.ajax({
                        url: '@Url.Action("GetInterestRate", "passbooks")',
                        type: 'GET',
                        data: { savingsTypeId: savingsTypeId },
                        success: function (data) {
                            $('#InterestRate').val(data).prop('readonly', true);
                        },
                        error: function () {
                            alert('Failed to retrieve interest rate.');
                        }
                    });
                } else {
                    $('#InterestRate').val('').prop('readonly', false);
                }
            });
        });
    </script>
}
